[{"/home/hidex/projects/course-shop/client/src/components/common/Navbar/index.tsx":"1","/home/hidex/projects/course-shop/client/src/components/pages/Archive/index.tsx":"2","/home/hidex/projects/course-shop/client/src/hooks/loadOnScroll.hook.ts":"3","/home/hidex/projects/course-shop/client/src/index.tsx":"4","/home/hidex/projects/course-shop/client/src/components/common/Footer/index.tsx":"5","/home/hidex/projects/course-shop/client/src/components/context/AuthContext.jsx":"6","/home/hidex/projects/course-shop/client/src/components/pages/Categories/index.tsx":"7","/home/hidex/projects/course-shop/client/src/components/pages/Entire/index.tsx":"8","/home/hidex/projects/course-shop/client/src/hooks/scrollToTop.hook.js":"9"},{"size":3349,"mtime":1619377198960,"results":"10","hashOfConfig":"11"},{"size":3011,"mtime":1619549264151,"results":"12","hashOfConfig":"11"},{"size":618,"mtime":1619524270102,"results":"13","hashOfConfig":"11"},{"size":409,"mtime":1618857147675,"results":"14","hashOfConfig":"11"},{"size":4648,"mtime":1619434190207,"results":"15","hashOfConfig":"11"},{"size":195,"mtime":1618658738974,"results":"16","hashOfConfig":"11"},{"size":2883,"mtime":1619529179831,"results":"17","hashOfConfig":"11"},{"size":5188,"mtime":1619527744513,"results":"18","hashOfConfig":"11"},{"size":237,"mtime":1618754098273,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"fapiri",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hidex/projects/course-shop/client/src/components/common/Navbar/index.tsx",[],"/home/hidex/projects/course-shop/client/src/components/pages/Archive/index.tsx",["41","42"],"/home/hidex/projects/course-shop/client/src/hooks/loadOnScroll.hook.ts",["43","44"],"/home/hidex/projects/course-shop/client/src/index.tsx",[],["45","46"],"/home/hidex/projects/course-shop/client/src/components/common/Footer/index.tsx",[],["47","48"],"/home/hidex/projects/course-shop/client/src/components/context/AuthContext.jsx",[],"/home/hidex/projects/course-shop/client/src/components/pages/Categories/index.tsx",["49","50","51"],"/home/hidex/projects/course-shop/client/src/components/pages/Entire/index.tsx",["52"],"import React, {useEffect, useState} from \"react\"\nimport {Course} from \"../../common/CourseItem\"\nimport {MiniCard} from \"../../common/MiniCard\"\nimport {Search} from \"../../common/Search\"\nimport {BandComponent} from \"../../common/BandComponent\"\nimport {Button} from \"../../common/Button\"\nimport {Col, Grid, Row} from \"../../common/Grid\"\nimport img from \"../../../assets/icons/css.png\"\nimport styled from \"styled-components\"\nimport {Header, Subheader} from \"../../common/Header\"\nimport {Link} from \"react-router-dom\"\nimport {useHttp} from \"../../../hooks/http.hook\";\nimport {Spinner} from \"../../common/Spinner\";\nimport {LoadingWrapper} from \"../Profile\";\nimport {ICategoryPayload, ICourse, ICoursePayload, ITag} from \"../../../../types\";\nimport {toast} from \"react-toastify\";\n\nconst ButtonWrapper = styled.div`\n  text-align: center;\n\n  button {\n    height: 40px;\n    width: 270px;\n  }\n`\n\n// const categories = [\n//     {name: \"CSS\", icon: \"css.png\"},\n//     {name: \"JavaScript\", icon: \"javascript.png\"},\n//     {name: \"Vue\", icon: \"css.png\"},\n//     {name: \"React\", icon: \"reactjs.jpg\"},\n//     {name: \"Java\", icon: \"java.png\"},\n//     {name: \"Python\", icon: \"python.png\"},\n//     {name: \"TypeScript\", icon: \"typescript.png\"},\n//     {name: \"Other\", icon: \"drugoe.png\"},\n// ]\n\nexport function Entire() {\n    const [tags, setTags] = useState<ITag[]>([]);\n    const [courses, setCourses] = useState<ICourse[]>([]);\n    const {loading, request} = useHttp();\n    useEffect(() => {\n        const makeRequest = async () => {\n            const [{courses}, {tags}] = await Promise.all([request<ICoursePayload>('/courses?page=1&count=10'), request<ICategoryPayload>('/categories?page=1&count=10')])\n            setTags(tags);\n            setCourses(courses);\n        }\n        makeRequest().catch(e => toast(\"An error has occurred\", {type: \"error\"}))\n    }, [])\n    return loading\n        ? <LoadingWrapper><Spinner/></LoadingWrapper>\n        : (\n            <>\n                <Grid classes={[\"pt-4\"]}>\n                    <Row>\n                        <Col classes={[\"col-md-8\", \"offset-md-2\", \"col-sm-12\"]}>\n                            <Header classes={[\"text-center\", \"mt-4\"]}>\n                                Welcome to CourseShop\n                            </Header>\n                            <p\n                                className=\"text-center mt-4\"\n                                style={{fontSize: 24, color: \"#969494\"}}\n                            >\n                                Resource of video programming lessons for developers. Take the\n                                knowledge of your profile from us, because we are the best, bruh.\n                                Really.\n                            </p>\n                        </Col>\n                        <Col\n                            classes={[\n                                \"col-md-6\",\n                                \"offset-md-3\",\n                                \"mt-md-5\",\n                                \"mt-3\",\n                                \"col-8\",\n                                \"offset-2\",\n                            ]}\n                        >\n                            <Search/>\n                        </Col>\n                    </Row>\n                </Grid>\n\n                <BandComponent classes={[\"mt-5\"]}>\n                    <Grid classes={[\"pt-4\", \"pb-3\"]} fluid>\n                        <Subheader classes={[\"text-center\", \"pb-2\"]} light>\n                            Popular categories\n                        </Subheader>\n                        <div style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                            flexWrap: 'wrap',\n                            maxWidth: 1570,\n                            margin: '0px auto'\n                        }}>\n                            {\n                                tags.map(tag => <MiniCard url={img} text={tag.tag} link=\"#\" key={tag.id}/>\n                                )}\n                        </div>\n                        <ButtonWrapper className=\"pt-3\">\n                            <Link to=\"/categories\"><Button>All categories</Button></Link>\n                        </ButtonWrapper>\n                    </Grid>\n                </BandComponent>\n\n                <Grid classes={[\"pt-4\", \"pb-5\"]}>\n                    <Row>\n                        <Col>\n                            <Subheader classes={[\"text-center\", \"mb-4\"]}>\n                                Recently added courses\n                            </Subheader>\n                            <Course>\n                                {courses.map(course => (\n                                    <Course.Item course={course} key={course.id}/>\n                                ))}\n                            </Course>\n                            <ButtonWrapper className=\"pt-3\">\n                                <Link to='/archive'>\n                                    <Button>All courses</Button>\n                                </Link>\n                            </ButtonWrapper>\n                        </Col>\n                    </Row>\n                </Grid>\n            </>\n        );\n}\n","/home/hidex/projects/course-shop/client/src/hooks/scrollToTop.hook.js",[],{"ruleId":"53","severity":1,"message":"54","line":11,"column":9,"nodeType":"55","messageId":"56","endLine":11,"endColumn":19},{"ruleId":"57","severity":1,"message":"58","line":40,"column":8,"nodeType":"59","endLine":40,"endColumn":21,"suggestions":"60"},{"ruleId":"53","severity":1,"message":"61","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":13},{"ruleId":"57","severity":1,"message":"62","line":18,"column":8,"nodeType":"59","endLine":18,"endColumn":10,"suggestions":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"53","severity":1,"message":"70","line":45,"column":20,"nodeType":"55","messageId":"56","endLine":45,"endColumn":29},{"ruleId":"53","severity":1,"message":"71","line":46,"column":21,"nodeType":"55","messageId":"56","endLine":46,"endColumn":28},{"ruleId":"57","severity":1,"message":"72","line":54,"column":8,"nodeType":"59","endLine":54,"endColumn":10,"suggestions":"73"},{"ruleId":"57","severity":1,"message":"72","line":49,"column":8,"nodeType":"59","endLine":49,"endColumn":10,"suggestions":"74"},"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'countCourses', 'courses.length', 'loading', 'pathname', and 'request'. Either include them or remove the dependency array.","ArrayExpression",["75"],"'React' is defined but never used.","React Hook useEffect has a missing dependency: 'eventHandler'. Either include it or remove the dependency array.",["76"],"no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],"'setFilter' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.",["79"],["80"],{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},"no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},{"desc":"85","fix":"87"},"Update the dependencies array to be: [countCourses, courses.length, currentPage, loading, pathname, request]",{"range":"88","text":"89"},"Update the dependencies array to be: [eventHandler]",{"range":"90","text":"91"},"Update the dependencies array to be: [request]",{"range":"92","text":"93"},{"range":"94","text":"93"},[1607,1620],"[countCourses, courses.length, currentPage, loading, pathname, request]",[595,597],"[eventHandler]",[1480,1482],"[request]",[1847,1849]]